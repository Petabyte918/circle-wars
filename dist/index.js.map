{"version":3,"sources":["../server/index.js"],"names":["express","require","app","http","Server","io","ticLength","entities","systems","PhysicsSystem","EntityBroadcastSystem","use","static","on","playerConnect","listen","console","log","staticEntity","Entity","addComponent","Position","Collider","id","socket","hero","Hero","Player","emit","Incoming","Deleted","components","name","value","step","i","length","setInterval"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,MAAMF,SAAZ;AACA,IAAMG,OAAOF,QAAQ,MAAR,EAAgBG,MAAhB,CAAuBF,GAAvB,CAAb;AACA,IAAMG,KAAKJ,QAAQ,WAAR,EAAqBE,IAArB,CAAX;;AAEA,IAAMG,YAAY,EAAlB;;AAEA,IAAMC,WAAW,EAAjB;AACA,IAAMC,UAAU,CAAC,IAAIC,sBAAJ,CAAkBH,SAAlB,CAAD,EAA+B,IAAII,sCAAJ,CAA0BL,EAA1B,CAA/B,CAAhB;;AAEAH,IAAIS,GAAJ,CAAQX,QAAQY,MAAR,CAAe,2CAAf,CAAR;;AAEAP,GAAGQ,EAAH,CAAM,YAAN,EAAoBC,aAApB;;AAEAX,KAAKY,MAAL,CAAY,EAAZ,EAAgB,YAAW;AACvBC,YAAQC,GAAR,CAAY,kCAAZ;AACH,CAFD;;AAIA;AACA,IAAMC,eAAe,IAAIC,cAAJ,GAChBC,YADgB,CACH,IAAIC,kBAAJ,CAAa,CAAC,EAAd,EAAiB,CAAC,EAAlB,CADG,EAEhBD,YAFgB,CAEH,IAAIE,kBAAJ,CAAa,MAAb,CAFG,CAArB;AAGAf,SAASW,aAAaK,EAAtB,IAA4BL,YAA5B;;AAGA,SAASJ,aAAT,CAAuBU,MAAvB,EAA+B;AAC3B,QAAMC,OAAO,IAAIC,UAAJ,CAAS,WAAT,EACRN,YADQ,CACK,IAAIO,cAAJ,CAAWH,OAAOD,EAAlB,CADL,CAAb;;AAGAP,YAAQC,GAAR,CAAY,kBAAZ,EAAgCQ,KAAKF,EAArC;;AAEAhB,aAASkB,KAAKF,EAAd,IAAoBE,IAApB;AACAD,WAAOI,IAAP,CAAY,oBAAZ,EAAkCrB,QAAlC;;AAEA,QAAIsB,kBAAJ,CAAaL,MAAb,EAAqBC,IAArB,EAA2BlB,QAA3B;;AAEAiB,WAAOX,EAAP,CAAU,YAAV,EAAwB,kBAAU;AAC9BY,aAAKL,YAAL,CAAkB,IAAIU,gBAAJ,EAAlB;AACAd,gBAAQC,GAAR,CAAYQ,KAAKM,UAAL,CAAgBC,IAAhB,CAAqBC,KAAjC,EAAwC,cAAxC;AACH,KAHD;AAIH;;AAED,SAASC,IAAT,GAAgB;AACZ,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI3B,QAAQ4B,MAA5B,EAAoCD,GAApC,EAAyC;AACrC3B,gBAAQ2B,CAAR,EAAWD,IAAX,CAAgB3B,QAAhB;AACH;AACJ;;AAED8B,YAAYH,IAAZ,EAAkB5B,SAAlB","file":"index.js","sourcesContent":["import {Hero} from './Hero'\r\nimport {Player} from './components/Player'\r\nimport {PhysicsSystem} from './systems/Physics'\r\nimport {EntityBroadcastSystem} from './systems/EntityBroadcast'\r\nimport {Vectors} from './Vectors'\r\nimport {Entity} from './Entity'\r\nimport {Name} from './components/Name'\r\nimport {Position} from './components/physics/Position'\r\nimport {Collider} from './components/physics/Collider'\r\nimport {Physics} from './components/physics/Physics'\r\nimport {Health} from './components/Health'\r\nimport {Dynamic} from './components/Dynamic'\r\nimport {Deleted} from './components/Deleted'\r\n\r\nimport {Incoming} from './Incoming'\r\n\r\nconst express = require('express')\r\nconst app = express();\r\nconst http = require('http').Server(app);\r\nconst io = require('socket.io')(http)\r\n\r\nconst ticLength = 25\r\n\r\nconst entities = {}\r\nconst systems = [new PhysicsSystem(ticLength), new EntityBroadcastSystem(io)]\r\n\r\napp.use(express.static('/home/ubuntu/dev/cw-client/dist/cw-client'))\r\n\r\nio.on('connection', playerConnect)\r\n\r\nhttp.listen(80, function() {\r\n    console.log('You are now running Circle Wars!');\r\n});\r\n\r\n//test code to add a static entity\r\nconst staticEntity = new Entity()\r\n    .addComponent(new Position(-50,-50))\r\n    .addComponent(new Collider('rect'))\r\nentities[staticEntity.id] = staticEntity\r\n\r\n\r\nfunction playerConnect(socket) {\r\n    const hero = new Hero('All Might')\r\n        .addComponent(new Player(socket.id))\r\n    \r\n    console.log('a user connected', hero.id)\r\n    \r\n    entities[hero.id] = hero\r\n    socket.emit('connectionEntities', entities)\r\n\r\n    new Incoming(socket, hero, entities)\r\n\r\n    socket.on('disconnect', reason => {\r\n        hero.addComponent(new Deleted())\r\n        console.log(hero.components.name.value, 'disconnected')\r\n    })\r\n}\r\n\r\nfunction step() {\r\n    for (let i = 0; i < systems.length; i++) {\r\n        systems[i].step(entities)\r\n    }\r\n}\r\n\r\nsetInterval(step, ticLength)"]}